{"ast":null,"code":"var _jsxFileName = \"/Users/birtespreuer/Desktop/wcs/animals/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Ticker from \"./components/Ticker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport { getArticles } from \"./service/news\";\n/*\nclass App extends Component {\n  state = {\n    userInput: \"\",\n    gifList: [],\n    selectedGif: {}\n  };\n\n  //this is where we use API and retrieve data back\n  componentDidMount() {\n    fetch(\n      \"http://newsapi.org/v2/top-headlines?country=it&apiKey=38c6325b37ef4200b8d0b52b8e8ab90b\"\n    )\n      .then(response => response.json())\n      .then(gifResults => this.setState({ gifList: gifResults.articles }))\n      .catch(error => console.error(`Oooops, no news today: ${error}`));\n  }\n\n  //this is where we have the changes to typing and click stored\n  handleChange = e => this.setState({ userInput: e.target.value });\n  handleUserInput = () => {\n    let userInput = this.state.userInput ? this.state.userInput : \"fox\";\n\n    fetch(\n      `http://newsapi.org/v2/top-headlines?q=\"+query+\"country=en&q=${userInput}&apiKey=38c6325b37ef4200b8d0b52b8e8ab90b`\n    )\n      .then(response => response.json())\n      .then(gifResults => this.setState({ gifList: gifResults.articles }))\n      .catch(error => console.error(`Oooops, no news today: ${error}`));\n  };\n  */\n// TRIAL\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    getArticles().then(data => {\n      this.setState({\n        isLoading: false,\n        data: data\n      });\n    }, error => {\n      alert(\"Errror\", \"Something went wrong!\");\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n  } //rendering data\n\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Ticker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"\\u200B\", React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.state.gifList.map(element => React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"so: \", element.content, \"/> \")), \"\\u200B\", this.state.gifList.map(element => React.createElement(\"img\", {\n      key: element.id,\n      src: element.urlToImage,\n      alt: \"picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/birtespreuer/Desktop/wcs/animals/src/App.js"],"names":["React","Component","Ticker","Header","getArticles","App","constructor","props","state","isLoading","data","componentDidMount","then","setState","error","alert","render","console","log","gifList","map","element","content","id","urlToImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,WAAW,GAAGQ,IAAd,CACEF,IAAI,IAAI;AACN,WAAKG,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,IAAI,EAAEA;AAFM,OAAd;AAID,KANH,EAOEI,KAAK,IAAI;AACPC,MAAAA,KAAK,CAAC,QAAD,EAAW,uBAAX,CAAL;AACD,KATH;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,IAAvB;AACD,GAzByB,CA2B1B;;;AACAM,EAAAA,MAAM,GAAG;AACP,WACE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,YAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKR,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAuBC,OAAO,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASA,OAAO,CAACC,OAAjB,QADD,CAHH,YAOG,KAAKd,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAuBC,OAAO,IAC7B;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACE,EAAlB;AAAsB,MAAA,GAAG,EAAEF,OAAO,CAACG,UAAnC;AAA+C,MAAA,GAAG,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAPH,CADF;AAaD;;AA1CyB;;AA6C5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Ticker from \"./components/Ticker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport { getArticles } from \"./service/news\";\n\n/*\nclass App extends Component {\n  state = {\n    userInput: \"\",\n    gifList: [],\n    selectedGif: {}\n  };\n\n  //this is where we use API and retrieve data back\n  componentDidMount() {\n    fetch(\n      \"http://newsapi.org/v2/top-headlines?country=it&apiKey=38c6325b37ef4200b8d0b52b8e8ab90b\"\n    )\n      .then(response => response.json())\n      .then(gifResults => this.setState({ gifList: gifResults.articles }))\n      .catch(error => console.error(`Oooops, no news today: ${error}`));\n  }\n\n  //this is where we have the changes to typing and click stored\n  handleChange = e => this.setState({ userInput: e.target.value });\n  handleUserInput = () => {\n    let userInput = this.state.userInput ? this.state.userInput : \"fox\";\n\n    fetch(\n      `http://newsapi.org/v2/top-headlines?q=\"+query+\"country=en&q=${userInput}&apiKey=38c6325b37ef4200b8d0b52b8e8ab90b`\n    )\n      .then(response => response.json())\n      .then(gifResults => this.setState({ gifList: gifResults.articles }))\n      .catch(error => console.error(`Oooops, no news today: ${error}`));\n  };\n  */\n\n// TRIAL\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    getArticles().then(\n      data => {\n        this.setState({\n          isLoading: false,\n          data: data\n        });\n      },\n      error => {\n        alert(\"Errror\", \"Something went wrong!\");\n      }\n    );\n  }\n\n  render() {\n    console.log(this.state.data);\n  }\n\n  //rendering data\n  render() {\n    return (\n      <section className=\"App\">\n        <Ticker />​\n        <Header />\n        {this.state.gifList.map(element => (\n          <h2>so: {element.content}/> </h2>\n        ))}\n        ​\n        {this.state.gifList.map(element => (\n          <img key={element.id} src={element.urlToImage} alt=\"picture\" />\n        ))}\n      </section>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}